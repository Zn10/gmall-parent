<?xml version="1.0" encoding="UTF-8"?>
<!--scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。-->
<!--scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。-->
<!--debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。-->
<configuration>
    <!--日志格式应用spring boot默认的格式，也可以自己更改-->
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

    <!--定义日志存放的位置，默认存放在项目启动的相对路径的目录-->
    <springProperty scope="context" name="LOG_PATH" source="mall.log.path" defaultValue="/data/cloud/logs"/>
    <springProperty scope="context" name="APP_NAME" source="spring.application.name" defaultValue="mall-cloud"/>
    <springProperty scope="context" name="LEVEL" source="mall.log.level" defaultValue="info"/>
    <springProperty scope="context" name="MAX_FILE_SIZE" source="mall.log.maxFileSize" defaultValue="50MB"/>

    <springProfile name="local">
        <!-- 定义控制台输出 -->
        <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>${FILE_LOG_PATTERN}</pattern>
                <charset>utf-8</charset>
            </encoder>
        </appender>
        <logger name="com.zn" level="DEBUG"/>
        <!--默认所有的包以info-->
        <root level="${LEVEL}">
            <appender-ref ref="stdout"/>
        </root>
    </springProfile>

    <springProfile name="!local">
        <!-- 定义控制台输出 -->
        <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>${FILE_LOG_PATTERN}</pattern>
                <charset>utf-8</charset>
            </encoder>
        </appender>

        <!--INFO级别-->
        <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>INFO</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
            <File>${LOG_PATH}/${APP_NAME}/info/${APP_NAME}/${APP_NAME}-info.log</File>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <FileNamePattern>
                    ${LOG_PATH}/${APP_NAME}/info/${APP_NAME}/${APP_NAME}-info.%d{yyyy-MM-dd}.log.zip
                </FileNamePattern>
                <maxHistory>90</maxHistory>
            </rollingPolicy>
            <!-- 追加方式记录日志 -->
            <append>true</append>
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>${FILE_LOG_PATTERN}</pattern>
                <charset>utf-8</charset>
            </encoder>
        </appender>

        <!--DEBUG级别-->
        <appender name="DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>DEBUG</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
            <File>${LOG_PATH}/${APP_NAME}/debug/${APP_NAME}/${APP_NAME}-debug.log</File>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <FileNamePattern>
                    ${LOG_PATH}/${APP_NAME}/debug/${APP_NAME}/${APP_NAME}-debug.%d{yyyy-MM-dd}.log.zip
                </FileNamePattern>
                <maxHistory>90</maxHistory>
            </rollingPolicy>
            <!-- 追加方式记录日志 -->
            <append>true</append>
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>${FILE_LOG_PATTERN}</pattern>
                <charset>utf-8</charset>
            </encoder>
        </appender>

        <!--ERROR级别-->
        <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>ERROR</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
            <File>${LOG_PATH}/${APP_NAME}/error/${APP_NAME}/${APP_NAME}-error.log</File>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <FileNamePattern>
                    ${LOG_PATH}/${APP_NAME}/error/${APP_NAME}/${APP_NAME}-error.%d{yyyy-MM-dd}.log.zip
                </FileNamePattern>
                <maxHistory>90</maxHistory>
            </rollingPolicy>
            <!-- 追加方式记录日志 -->
            <append>true</append>
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>${FILE_LOG_PATTERN}</pattern>
                <charset>utf-8</charset>
            </encoder>
        </appender>

        <!--WARN级别-->
        <appender name="WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>WARN</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
            <File>${LOG_PATH}/${APP_NAME}/warn/${APP_NAME}/${APP_NAME}-warn.log</File>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <FileNamePattern>
                    ${LOG_PATH}/${APP_NAME}/warn/${APP_NAME}/${APP_NAME}-warn.%d{yyyy-MM-dd}.log.zip
                </FileNamePattern>
                <maxHistory>90</maxHistory>
            </rollingPolicy>
            <!-- 追加方式记录日志 -->
            <append>true</append>
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>${FILE_LOG_PATTERN}</pattern>
                <charset>utf-8</charset>
            </encoder>
        </appender>

        <appender name="LOGSTASH" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
            <!-- logstash ip和暴露的端口，logback就是通过这个地址把日志发送给logstash -->
            <destination>gmall-logstash:5044</destination>
            <encoder charset="UTF-8" class="net.logstash.logback.encoder.LogstashEncoder">
                <customFields>{"servicename":"2.0-service-cart"}</customFields>
            </encoder>
        </appender>

        <logger name="com.zn" level="DEBUG"/>
        <logger name="com.alibaba.nacos.client.naming" level="WARN"/>
        <!--输出jdbc 事务相关信息-->
        <logger name="org.springframework.jdbc" level="DEBUG"/>
        <logger name="org.apache.ibatis.cache.decorators.LoggingCache" level="DEBUG" additivity="false">
            <appender-ref ref="stdout"/>
        </logger>
        <logger name="org.springframework.boot" level="debug"/>

        <!--evel:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，-->
        <!--不能设置为INHERITED或者同义词NULL。默认是DEBUG。-->
        <root level="${LEVEL}">
            <appender-ref ref="stdout"/>
            <appender-ref ref="DEBUG"/>
            <appender-ref ref="INFO"/>
            <appender-ref ref="ERROR"/>
            <appender-ref ref="WARN"/>
            <appender-ref ref="LOGSTASH"/>
        </root>
    </springProfile>
</configuration>